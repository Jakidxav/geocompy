# Geometry operations {#geometric-operations}

## Prerequisites

```{python}
import pandas as pd
pd.set_option("display.max_rows", 4)
pd.set_option("display.max_columns", 6)
```

Packages...

```{python}
import matplotlib.pyplot as plt
import geopandas as gpd
```

Sample data...

```{python}
seine = gpd.read_file("data/seine.gpkg")
us_states = gpd.read_file("data/us_states.gpkg")
```

## Introduction

## Geometric operations on vector data {#geo-vec}

### Simplification

Simplify...

```{python}
seine_simp = seine.simplify(2000)  # 2000 m
```

Plot:

```{python}
fig, axes = plt.subplots(ncols=2)
seine.plot(ax=axes[0])
seine_simp.plot(ax=axes[1])
axes[0].set_title("Original")
axes[1].set_title("Simplified (d=2000 m)")
```

Compare number of nodes:

```{python}
import sys
sys.getsizeof(seine)       ## Bytes
```

```{python}
sys.getsizeof(seine_simp)  ## Bytes
```

US states example.... Transform...

```{python}
us_states2163 = us_states.to_crs(2163)
```

Simplify...

```{python}
us_states_simp1 = us_states2163.simplify(100000)
```

Plot...

```{python}
us_states_simp1.plot()
```

```{python}
import topojson as tp
topo = tp.Topology(us_states2163, prequantize=False)
us_states_simp2 = topo.toposimplify(100000).to_gdf()
```

```{python}
fig, axes = plt.subplots(ncols=3)
us_states2163.plot(ax=axes[0])
us_states_simp1.plot(ax=axes[1])
us_states_simp2.plot(ax=axes[2])
axes[0].set_title("Original")
axes[1].set_title("Simplified (w/ geopandas)")
axes[2].set_title("Simplified (w/ topojson)")
```

### Centroids

...

```{python}

```

### Buffers

...

```{python}

```

### Affine transformations

...

```{python}

```

### Clipping

...

```{python}

```

### Subsetting and clipping

...

```{python}

```

### Geometry unions

...

```{python}

```

### Type transformations

...

```{python}

```

## Geometric operations on raster data {#geo-ras}

### Geometric intersections

...

```{python}

```

### Extent and origin

...

```{python}

```

### Aggregation and disaggregation

...

```{python}

```

### Resampling

...

```{python}

```

## Exercises

