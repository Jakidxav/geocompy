# Geometry operations {#geometric-operations}

## Prerequisites

```{python}
import pandas as pd
pd.set_option("display.max_rows", 4)
pd.set_option("display.max_columns", 6)
```

Packages...

```{python}
import matplotlib.pyplot as plt
import geopandas as gpd
```

Sample data...

```{python}
seine = gpd.read_file("data/seine.gpkg")
```

## Introduction

## Geometric operations on vector data {#geo-vec}

### Simplification

Simplify...

```{python}
seine_simp = seine.simplify(2000)  # 2000 m
```

Plot:

```{python}
fig, axes = plt.subplots(ncols=2)
seine.plot(ax=axes[0])
seine_simp.plot(ax=axes[1])
axes[0].set_title("Original")
axes[1].set_title("Simplified (d=2000 m)")
```

Compare number of nodes:

```{python}
len(list(seine["geometry"].iloc[0].geoms[0].coords)) # Original
```

```{python}
len(list(seine_simp.iloc[0].coords)) # Simplified
```


### Centroids

...

```{python}

```

### Buffers

...

```{python}

```

### Affine transformations

...

```{python}

```

### Clipping

...

```{python}

```

### Subsetting and clipping

...

```{python}

```

### Geometry unions

...

```{python}

```

### Type transformations

...

```{python}

```

## Geometric operations on raster data {#geo-ras}

### Geometric intersections

...

```{python}

```

### Extent and origin

...

```{python}

```

### Aggregation and disaggregation

...

```{python}

```

### Resampling

...

```{python}

```

## Exercises

